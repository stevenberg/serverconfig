#!/usr/bin/ruby

require 'date'
require 'fileutils'
require 'open3'
require 'pathname'
require 'snitcher'

include FileUtils

BACKUP_DIRECTORY = Pathname('/home/steven/dbbackups')

unless BACKUP_DIRECTORY.exist?
  mkdir(BACKUP_DIRECTORY)
  chown('steven', 'steven', BACKUP_DIRECTORY)
end

today = Date.today

Dir.entries(BACKUP_DIRECTORY).each do |entry|
  next if entry[0] == '.'

  created_on = Date.parse(entry)
  next if created_on > today.prev_month || created_on.mday == 1

  remove_entry(BACKUP_DIRECTORY.join((entry)))
end

new_directory = BACKUP_DIRECTORY.join(today.to_s)
mkpath(new_directory)

`sudo -u postgres psql -t -c 'select datname from pg_database'`.each_line do |db|
  db.strip!

  next if db.empty?
  next if %w(template0 template1).include?(db)

  output, status = Open3.capture2("sudo -u postgres pg_dump #{db}")
  raise "Dump of #{db} failed" unless status.success?

  result = File.write(new_directory.join("#{db}.db.bak"), output)
  raise "Write of #{db}.db.bak failed" unless result == output.bytesize
end

chown_R('steven', 'steven', new_directory)

Snitcher.snitch('{{ dbbackup_snitch_token }}')
